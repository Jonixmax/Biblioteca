@{
    ViewData["Title"] = "Clasificar Libros | Biblioteca Digital Interactiva – Lectura+";
}

<div class="container my-5">
    <h2 class="text-center mb-4">Clasificar Libros</h2>

    <div class="row">
        @foreach (var libro in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <img src="@libro.PortadaUrl" class="card-img-top" alt="@libro.Titulo" style="width: 100%; height: 300px; object-fit: contain;">

                    <div class="card-body">
                        <h5 class="card-title">@libro.Titulo</h5>
                        <p class="card-text text-muted">@libro.Genero</p>

                        <!-- Sección de calificación -->
                        <div class="rating mb-3" data-libro-id="@libro.IdLibro">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <span class="star"
                                      data-value="@i"
                                      onclick="rateBook(@libro.IdLibro, @i)"
                                      onmouseover="highlightStars(this)"
                                      onmouseout="resetStars(this, @libro.IdLibro)">
                                    <i class="fa fa-star text-muted"></i>
                                </span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<script>
    // Función para resaltar estrellas al pasar el mouse
    function highlightStars(starElement) {
        const value = parseInt(starElement.getAttribute('data-value'));
        const stars = starElement.parentNode.querySelectorAll('.star');

        stars.forEach(star => {
            const starValue = parseInt(star.getAttribute('data-value'));
            if (starValue <= value) {
                star.querySelector('.fa-star').classList.add('text-warning');
                star.querySelector('.fa-star').classList.remove('text-muted');
            } else {
                star.querySelector('.fa-star').classList.remove('text-warning');
                star.querySelector('.fa-star').classList.add('text-muted');
            }
        });
    }

    // Función para resetear estrellas al salir del área
    function resetStars(starElement, libroId) {
        const stars = starElement.parentNode.querySelectorAll('.star');
        stars.forEach(star => {
            star.querySelector('.fa-star').classList.add('text-muted');
            star.querySelector('.fa-star').classList.remove('text-warning');
        });
    }

    // Función para enviar calificación
    function rateBook(libroId, puntuacion) {
        fetch(`/Home/Calificar?idLibro=${libroId}&puntuacion=${puntuacion}`)
            .then(response => response.text())
            .then(data => {
                alert("¡Gracias por tu calificación!");
            })
            .catch(error => console.error("Error al calificar:", error));
    }
</script>
